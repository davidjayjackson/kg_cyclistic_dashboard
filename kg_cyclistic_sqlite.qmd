---
title: "Cyclistic Bike Share"
format: html
editor: visual
---

```{r setup, include=FALSE}
library(tidyverse)
library(lubridate)
library(janitor)
library(scales)
library(leaflet)
library(RSQLite)
```

## Kaggle Source:

```{r}
rm(list =  ls())
db <- dbConnect(SQLite(), dbname="../DATA/cyclistic.sqlite3")
bike_data <- dbGetQuery(db,"SELECT * FROM cyclistic_clean;")

```

## Export clean data

```{r}
#| echo: false
bike_data$rideable_type <- as.factor(bike_data$rideable_type)
bike_data$member_casual <- as.factor(bike_data$member_casual)
bike_data$day_of_week <- as.factor(bike_data$day_of_week)
bike_data$month <- as.factor(bike_data$month)
bike_data$hour <- as.factor(bike_data$hour)
```

```{r}
bike_data %>% select(rideable_type,member_casual,day_of_week,month) %>% summary()
```

## A histogram of trip durations

```{r}
bike_data %>%
  ggplot(aes(x = log10(trip_duration))) +
  geom_histogram() +
  labs(title = "Histogram of Trip Durations",
       x = "Trip Duration (mins)",
       y = "Count")
```

## A bar chart of customer types

```{r}
bike_data %>%
  ggplot(aes(x = member_casual, fill = member_casual)) +
  geom_bar() +
  labs(title = "Bar Chart of Customer Types",
       x = "Customer Type",
       y = "Count")
```

## A line chart of bike usage by month

```{r}
month_data <- dbGetQuery(db,"SELECT * FROM ride_months;")
 month_data %>%
  ggplot(aes(x = reorder(month,ride_count), y = ride_count, fill = month)) +
  geom_col() +
  labs(title = "Column Chart of Bike Usage by Month",
       x = NULL,
       y = "Count") +
  theme(axis.text.x = element_blank())
```

## A boxplot of trip durations by customer type

```{r}
bike_data %>%
  ggplot(aes(x = member_casual, y = trip_duration, fill = member_casual)) +
  geom_boxplot() +
  labs(title = "Boxplot of Trip Durations by Customer Type",
       x = "Customer Type",
       y = "Trip Duration (mins)")
```

## A scatter plot of start and end locations

```{r}
july_rides <- dbGetQuery(db,"SELECT * FROM july_rides;")
```


```{r}

july_rides %>% 
  ggplot(aes(x = longitude, y = latitude, color = member_casual)) +
  geom_point(alpha = 0.1) +
  # geom_point(aes(x = end_lng, y = end_lat), alpha = 0.1) +
  labs(title = "Scatter Plot of Start Locations",
       x = "Longitude",
       y = "Latitude") + theme_classic() +
   theme(panel.grid = element_line(color = "black", linewidth = 0.5))
```

## A pie chart of customer types

```{r}
bike_data %>%
  count(member_casual) %>%
  ggplot(aes(x = "", y = n, fill = member_casual)) +
  geom_col(width = 1) +
  coord_polar(theta = "y") +
  labs(title = "Pie Chart of Customer Types",
       x = NULL,
       y = NULL)
```

## A pie chart by Bike types

```{r}
bike_data %>%
  count(rideable_type) %>%
  ggplot(aes(x = "", y = n, fill = rideable_type)) +
  geom_col(width = 1) +
  coord_polar(theta = "y") +
  labs(title = "Pie Chart of Bike Types",
       x = NULL,
       y = NULL)
```

## A density plot of trip durations by customer type

```{r}
bike_data %>%
  ggplot(aes(x = log10(trip_duration), fill = member_casual)) +
  geom_density(alpha = 0.5) +
  labs(title = "Density Plot of Trip Durations by Customer Type",
       x = "Trip Duration (mins)log10",
       y = "Density")

```

## A facet plot of bike usage by hour and day of week

```{r}
bike_data %>% group_by(hour, day_of_week)%>%
  summarize(count = n()) %>%
  ggplot() +
  geom_area(aes(x = hour, y = count, group = day_of_week, fill = day_of_week)) +
  labs(title = "Plot of Bike Usage by Hour and Day of Week",
       x = "Hour",
       y = "Count")
```

## Map of the number of rides for July

```{r}
# Load the ggmap package
# library(ggmap)
# 
# # Get the map of Chicago from Google Maps
# chicago_map <- get_map(location = "chicago il", zoom = 11)
# 
# # Plot the map with your data
# ggmap(chicago_map) +
#   geom_point(data = july_rides, aes(x = start_lng, y = start_lat, color = member_casual), alpha = 0.1) +
#   labs(title = "Scatter Plot of Start Locations",
#        x = "Longitude",
#        y = "Latitude")
```
```{r}
july_rides_stations <- dbGetQuery(db,"SELECT * FROM july_rides_stations;")
```
```{r}
# Load the maps package
library(maps)


# Plot the map of Chicago
ggplot() +
  geom_polygon(data = map_data("state", region = "illinois"), 
               aes(x = long, y = lat, group = group), fill = "grey", color = "white") +
  coord_map(xlim = c(-87.9, -87.5), ylim = c(41.6, 42)) +
  geom_point(data = july_rides_stations, aes(x = longitude, y = , color = member_casual), alpha = 0.1) +
  labs(title = "Scatter Plot of Start Locations",
       x = "Longitude",
       y = "Latitude")


```
```{r}
leaflet(july_rides_stations) %>%
  addTiles() %>% # Add default OpenStreetMap map tiles
  setView(lng = -87.7, lat = 41.8, zoom = 8) %>% # Set a center point and zoom level
  addCircleMarkers(lng = ~longitude, lat = ~latitude,
                   popup = ~paste0("Station: ", start_station_name, "<br>",
                                   "Ride count: ", ride_count),
                   label = ~start_station_name)
```

